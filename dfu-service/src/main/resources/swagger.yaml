---
swagger: "2.0"
info:
  description: DesireFU后端接口文档。
  version: 1.0.0
  title: DFU_API_DOC
host: gatesma.cn
basePath: /desirefu/v1
tags:
  - name: Account
    description: 账号接口
  - name: NormalAccount
    description: 普通账号接口
  - name: User
    description: 用户接口
  - name: Login
    description: 登录接口
  - name: Meta
    description: 元数据接口
  - name: Upload
    description: 文件上传接口
  - name: College
    description: 高校相关接口
  - name: Department
    description: 学院相关接口
  - name: Test
    description: 测试、健康检查
  - name: ExternalInterface
    description: 外部接口
  - name: CompetitionCreatorAccount
    description: 比赛创建者
  - name: OSSAccount
    description: OSS运营人员
  - name: RootAccount
    description: ROOT账号
  - name: Competition
    description: 比赛相关接口

schemes:
  - http
paths:

  /hello:
    post:
      tags:
        - Test
      summary: Hello
      description: 返回"hello"
      operationId: hello
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HelloRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  # user

  /user/add:
    post:
      tags:
        - User
      summary: 创建用户
      description: 创建用户，返回"用户ID"
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建用户
          required: true
          schema:
            $ref: '#/definitions/AddUserRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddUserRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /user/get:
    post:
      tags:
        - User
      summary: 查询用户
      description: 查询用户
      operationId: getUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 查询用户
          required: true
          schema:
            $ref: '#/definitions/GetUserRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GetUserRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  # account

  /account/add:
    post:
      tags:
        - Account
      summary: 创建账号
      description: 创建账号，返回"账号ID"
      operationId: addAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  # account

  /normal_account/add:
    post:
      tags:
        - NormalAccount
      summary: 创建普通学生账号
      description: 创建普通学生账号，返回"账号ID"
      operationId: addNormalAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddNormalAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddNormalAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /competition_creator_account/add:
    post:
      tags:
        - CompetitionCreatorAccount
      summary: 创建比赛创建者
      description: 创建比赛创建者，返回"账号ID"
      operationId: addCompetitionCreatorAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddCompetitionCreatorAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddCompetitionCreatorAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found


  /oss_account/add:
    post:
      tags:
        - OSSAccount
      summary: 创建运营人员
      description: 创建运营人员，返回"账号ID"
      operationId: addOSSAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddOSSAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddOSSAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found



  /root_account/add:
    post:
      tags:
        - RootAccount
      summary: 创建Root账号
      description: 创建Root账号，返回"账号ID"
      operationId: addRootAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddRootAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddRootAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found


  # college

  /college/add:
    post:
      tags:
        - College
      summary: 创建学校
      description: 创建学校，返回"学校ID"
      operationId: addCollege
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建学校
          required: true
          schema:
            $ref: '#/definitions/AddCollegeRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddCollegeRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /college/get:
    post:
      tags:
        - College
      summary: 查询高校
      description: 查询高校
      operationId: getCollege
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 查询高校
          required: true
          schema:
            $ref: '#/definitions/GetCollegeRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GetCollegeRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  # department

  /department/add:
    post:
      tags:
        - Department
      summary: 创建学院
      description: 创建学院，返回"学院ID"
      operationId: addDepartment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建学院
          required: true
          schema:
            $ref: '#/definitions/AddDepartmentRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddDepartmentRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /department/get:
    post:
      tags:
        - Department
      summary: 查询学院
      description: 查询学院
      operationId: getDepartment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 查询学院
          required: true
          schema:
            $ref: '#/definitions/GetDepartmentRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GetDepartmentRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /login/can_login_account:
    post:
      tags:
        - Login
      summary: 查询一个用户可以登录的账号
      description: 查询一个用户可以登录的账号
      operationId: canLoginAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CanLoginAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CanLoginAccountRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /external/code_2_wx_openid:
    post:
      tags:
        - ExternalInterface
      summary: 通过code，调用微信接口获取微信账号的openId
      description: 获取微信账号的openId
      operationId: codeToWxOpenId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CodeToWxOpenIdRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CodeToWxOpenIdRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /competition/add:
    post:
      tags:
        - Competition
      summary: 创建比赛信息
      description: 创建比赛信息
      operationId: addCompetition
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 创建账号
          required: true
          schema:
            $ref: '#/definitions/AddCompetitionRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AddCompetitionRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /competition/select_scroll:
    post:
      tags:
        - Competition
      summary: 获取比赛信息
      description: 获取比赛信息
      operationId: selectScrollCompetition
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SelectCompetitionRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SelectCompetitionRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

  /upload/upload_file:
    post:
      tags:
        - Upload
      description: 文件上传
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: account_id
          in: formData
          required: true
          format: int64
          type: integer
        - name: account_type
          in: formData
          required: true
          type: integer
          format: int32
        - name: file_name
          in: formData
          required: false
          type: string
        - name: file_type
          in: formData
          required: false
          type: string
          enum:
            - IMG
            - PDF
            - PPT
        - name: upfile
          in: formData
          required: true
          type: file
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/UploadFileRet'
        400:
          description: Invalid RequestBody supplied
        404:
          description: RequestBody not found

definitions:
  Object:
    type: object
  ReturnCode:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        example: 0
      message:
        type: string
        example: OK
  Page:
    properties:
      page_num:
        type: integer
        format: int32
        description: 页号
        minimum: 1
        default: 1
      page_size:
        type: integer
        format: int32
        description: 每页数据量
        minimum: 1
        default: 10
  PageInfo:
    properties:
      page_num:
        type: integer
        format: int32
        description: 当前页号
      page_size:
        type: integer
        format: int32
        description: 当前页数据量
      total_page:
        type: integer
        format: int32
        description: 总共页数
      total_count:
        type: integer
        format: int32
        description: 总共数据量

  AddAccountRequest:
    required:
      - account_type
      - root_user_id
    properties:
      account_type:
        type: integer
        format: int32
        example: 1
        description: 账号类型
      nick_name:
        type: string
        example: gatesma
        description: 账号名称
      memo:
        type: string
        example: 备注
        description: 备注
      root_user_id:
        type: integer
        format: int64
        example: 3453454
        description: 创建者userId
    title: AddAccountRequest
  AddAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddAccountRetData'
  AddAccountRetData:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID

  AddNormalAccountRequest:
    title: AddNormalAccountRequest
    required:
      - college_id
      - department_id
      - major
    allOf:
      - $ref: '#/definitions/AddAccountRequest'
      - properties:
          college_id:
            type: integer
            format: int32
            example: 2211
            description: 学校ID
          department_id:
            type: integer
            format: int32
            example: 1111
            description: 学院ID
          major:
            type: string
            example: 计算机科学与技术
            description: 专业
          stu_id:
            type: string
            example: 2017141461189
            description: 学号
          real_name:
            type: string
            example: 马保国
            description: 真实姓名

  AddNormalAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddNormalAccountRetData'
  AddNormalAccountRetData:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID


  AddCompetitionCreatorAccountRequest:
    title: AddCompetitionCreatorAccountRequest
    allOf:
      - $ref: '#/definitions/AddAccountRequest'
      - properties:
          author:
            type: string
            example: 1,2,3,4
            description: 可以创建的比赛范围
  AddCompetitionCreatorAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddCompetitionCreatorAccountRetData'
  AddCompetitionCreatorAccountRetData:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID






  AddOSSAccountRequest:
    title: AddOSSAccountRequest
    allOf:
      - $ref: '#/definitions/AddAccountRequest'
      - properties:
          type:
            type: integer
            format: int32
            example: 1
            description: 运营账号类型
  AddOSSAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddOSSAccountRetData'
  AddOSSAccountRetData:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID




  AddRootAccountRequest:
    title: AddRootAccountRequest
    allOf:
      - $ref: '#/definitions/AddAccountRequest'
      - properties:
          ext:
            type: string
            example:
            description: 可选字段
  AddRootAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddRootAccountRetData'
  AddRootAccountRetData:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID


  AddCollegeRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddCollegeData'
  AddCollegeData:
    properties:
      college_id:
        type: integer
        format: int32
        example: 2211
        description: 学校ID
  AddCollegeRequest:
    required:
      - name
      - ministry
      - identification
    properties:
      name:
        type: string
        example: 四川大学
        description: 学校名称
      ministry:
        type: string
        example: 教育部
        description: 主管部门
      identification:
        type: string
        example: 4151010610
        description: 学校标识码
      location:
        type: string
        example: 成都
        description: 所在地
      level:
        type: string
        example: 本科
        description: 办学层次
      memo:
        type: string
        example: 备注
        description: 备注


  AddDepartmentRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddDepartmentData'
  AddDepartmentData:
    properties:
      department_id:
        type: integer
        format: int32
        example: 1111
        description: 学院ID
  AddDepartmentRequest:
    required:
      - name
      - college_id
    properties:
      name:
        type: string
        example: 计算机学院
        description: 学院名称
      college_id:
        type: integer
        format: int32
        example: 2211
        description: 学校ID


  Login:
    required:
      - login_name
      - login_name_type
    properties:
      login_name:
        type: string
        example: "78837721"
        description: 登录账号名称
      login_name_type:
        type: integer
        format: int32
        example: 1
        description: 登录账号类型
      uin:
        type: string
        example: wid_syndekas34mnsj
        description: 微信或QQ对应的openID
    description: 登录信息
  LoginInfo:
    properties:
      login_name:
        type: string
        example: "78837721"
        description: 登录账号名称
      login_name_type:
        type: integer
        format: int32
        example: 1
        description: 登录账号类型
      uin:
        type: string
        example: "wx112341"
        description: loginNameType=12时，此字段为原始wx号
    description: 登录信息
  User:
    properties:
      user_id:
        type: integer
        format: int64
        example: 17998821
        description: 用户ID
        readOnly: true
      logins:
        type: array
        description: 所有login信息，包括绑定的
        items:
          $ref: '#/definitions/LoginInfo'
      user_name:
        type: string
        description: 用户名称
      cellphone:
        type: string
        description: 手机号码
      email:
        type: string
        description: 邮箱
      delete_status:
        type: integer
        format: int32
        example: 0
        description: 删除状态
        readOnly: true
      created_user_id:
        type: integer
        format: int64
        example: 3453334
        description: 创建人userId
      created_time:
        type: string
        example: '2018-01-01 12:00:00'
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss
        readOnly: true
      last_modified_user_id:
        type: integer
        format: int64
        example: 3453334
        description: 最后修改人userId
      last_modified_time:
        type: string
        example: '2018-01-02 13:20:15'
        description: 最后修改时间，格式：yyyy-MM-dd HH:mm:ss
        readOnly: true
    description: 用户

  GetUserRequest:
    properties:
      user_id:
        type: integer
        format: int64
        example: 17998821
        description: 用户登录信息 (login_name, login_name_type) 和 user_id两个必填一个
      login_name:
        type: string
        example: "78837721"
        description: 用户登录名称
      login_name_type:
        type: integer
        format: int32
        example: 1
        description: 用户登录类型
  GetUserRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/User'


  GetCollegeRequest:
    properties:
      name:
        type: string
        example: 四川大学
        description: 高校名称
      ministry:
        type: string
        example: 教育部
        description: 主管部门
      identification:
        type: string
        example: 4151010610
        description: 唯一标识码
  GetCollegeRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/College'
  College:
    description: 高校
    properties:
      college_id:
        type: integer
        format: int32
        example: 2211
        description: 学校ID
      name:
        type: string
        example: 四川大学
        description: 学校名称
      ministry:
        type: string
        example: 教育部
        description: 主管部门
      identification:
        type: string
        example: 4151010610
        description: 学校标识码
      location:
        type: string
        example: 成都
        description: 所在地
      level:
        type: string
        example: 本科
        description: 办学层次
      memo:
        type: string
        example: 备注
        description: 备注
      created_time:
        type: string
        example: "2020-01-01 00:00:00"
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss
      last_modified_time:
        type: string
        example: "2000-01-01 00:00:00"
        description: 最后修改时间，格式：yyyy-MM-dd HH:mm:ss

  GetDepartmentRequest:
    properties:
      name:
        type: string
        example: 计算机学院
        description: 学院名称
      department_id:
        type: integer
        format: int32
        example: 1111
        description: 学院ID
      college_id:
        type: integer
        format: int32
        example: 2211
        description: 学校ID
  GetDepartmentRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/Department'
  Department:
    description: 学院
    properties:
      name:
        type: string
        example: 计算机学院
        description: 学院名称
      department_id:
        type: integer
        format: int32
        example: 1111
        description: 学院ID
      college_id:
        type: integer
        format: int32
        example: 2211
        description: 学校ID
      created_time:
        type: string
        example: "2020-01-01 00:00:00"
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss
      last_modified_time:
        type: string
        example: "2000-01-01 00:00:00"
        description: 最后修改时间，格式：yyyy-MM-dd HH:mm:ss

  AddUserRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/AddUserRetData'
  AddUserRetData:
    properties:
      user_id:
        type: integer
        format: int64
        example: 100000
        description: 用户ID
  AddUserRequest:
    required:
      - login_name
      - login_name_type
    properties:
      login_name:
        type: string
        description: 登录账号名称
      login_name_type:
        type: integer
        format: int32
        example: 1
        description: 登录账号类型
      user_name:
        type: string
        description: 用户名称
      cellphone:
        type: string
        description: 手机号码
      email:
        type: string
        description: 邮箱
      created_user_id:
        type: integer
        format: int64
        example: 3453454
        description: 创建者userId
    title: AddUserRequest

  CanLoginAccountRequest:
    properties:
      login_name:
        type: string
        description: 登录账号名称
      login_name_type:
        type: integer
        format: int32
        example: 1
        description: 登录账号类型
      user_id:
        type: integer
        format: int64
        example: 100000
        description: 用户ID
  CanLoginAccountRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            type: array
            items:
              $ref: '#/definitions/CanLoginAccountData'
  CanLoginAccountData:
    properties:
      account_list:
        type: array
        items:
          $ref: '#/definitions/CanLoginAccountItem'
        description: 可以登录的账号列表
      platform_type:
        type: integer
        format: int32
        example: 1
        description: 账号类型
      platform:
        type: string
        description: 账号类型名称

  CanLoginAccountItem:
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID
      account_type:
        type: integer
        format: int32
        example: 1
        description: 账号类型
      account_name:
        type: string
        description: 账号名称
      role:
        type: integer
        format: int32
        example: 1
        description: 角色
      role_name:
        type: string
        description: 角色名称
      account_status:
        type: integer
        format: int32
        example: 1
        description: 账号状态
      account_status_str:
        type: string
        example: 有效
        description: 账号状态


  CodeToWxOpenIdRequest:
    properties:
      code:
        type: string
        example: 063UK5Ga1mTabA0qKAGa1aRBAv2UK5Ga
        description: 临时登录凭证 code
  CodeToWxOpenIdRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/CodeToWxOpenIdData'
  CodeToWxOpenIdData:
    properties:
      code:
        type: string
        example: 063UK5Ga1mTabA0qKAGa1aRBAv2UK5Ga
        description: 临时登录凭证 code
      open_id:
        type: string
        example: oNMqH5BpVtDgoo7zdvcjej_w-mwE
        description: WX账号的openId
  AddCompetitionRequest:
    required:
      - account_type
      - root_user_id
    title: AddCompetitionRequest
    properties:
      account_id:
        type: integer
        format: int64
        example: 100000
        description: 账号ID
      account_type:
        type: integer
        format: int32
        example: 1
        description: 账号类型
      type:
        type: integer
        format: int32
        example: 1
        description: 比赛类型 - 省级、校级等(枚举值)
      title:
        type: string
        example: 互联网+
        description: 比赛名称
      status:
        type: integer
        format: int32
        example: 1
        description: 比赛状态
      founder:
        type: string
        example: 教育部
        description: 创办方
      content:
        type: string
        example: 富文本
        description: 具体通知内容，富文本
      begin_time:
        type: string
        example: '2020-01-01 12:00:00'
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss
      end_time:
        type: string
        example: '2020-01-01 12:00:00'
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss
      user_id:
        type: integer
        format: int64
        example: 3453454
        description: 创建者userId
  AddCompetitionRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'

  SelectCompetitionRequest:
    properties:
      page:
        $ref: '#/definitions/Page'
      competition_ids:
        type: array
        example:
          - 177953
          - 177954
          - 177955
        items:
          type: integer
          format: int64
      account_id:
        type: integer
        format: int64
        example: 100001
        description: 创建比赛的账号Id, 用于筛选
      type:
        type: integer
        format: int32
        example: 1
        description: 比赛类型
      title:
        type: string
        example: 大创
        description: 比赛名称（支持模糊查询）
      founder:
        type: string
        example: 教育部
        description: 创办方（支持模糊查询）
      status:
        type: integer
        format: int32
        example: 1
        description: 是否草稿
      state:
        type: integer
        format: int32
        example: 1
        description: 比赛状态，0 - 未开始，1 - 进行中，2 - 已结束
      sort_field:
        type: string
        example: createTime
        description: 排序字段
      sort_seq:
        type: string
        example: asc
        description: 排序方式

  SelectCompetitionRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/SelectCompetitionRetData'

  SelectCompetitionRetData:
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/SelectCompetitionData'

  SelectCompetitionData:
    properties:
      competition_id:
        type: integer
        format: int64
        example: 3939494
        description: 比赛id
      account_id:
        type: integer
        format: int64
        example: 3939494
        description: 账号ID
      account_type:
        type: integer
        format: int32
        example: 1
        description: 账号类型
      type:
        type: integer
        format: int32
        example: 1
        description: 比赛类型
      title:
        type: string
        example: 大创
        description: 比赛名称
      founder:
        type: string
        example: 教育部
        description: 创办方
      content:
        type: string
        example: 内容
        description: 内容
      pv:
        type: integer
        format: int32
        example: 1
        description: 浏览量
      status:
        type: integer
        format: int32
        example: 1
        description: 比赛通知状态
      begin_time:
        type: string
        example: '2020-01-01 12:00:00'
        description: 开始时间，格式：yyyy-MM-dd HH:mm:ss
      end_time:
        type: string
        example: '2020-01-01 12:00:00'
        description: 结束时间，格式：yyyy-MM-dd HH:mm:ss
      created_ime:
        type: string
        example: '2020-01-01 12:00:00'
        description: 创建时间，格式：yyyy-MM-dd HH:mm:ss

  UploadFileRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            $ref: '#/definitions/UploadFileRetData'
  UploadFileRetData:
    type: object
    properties:
      file_url:
        type: string
        description: 文件URL

  HelloRet:
    allOf:
      - $ref: '#/definitions/ReturnCode'
      - properties:
          data:
            type: string
            description: 返回字符串
