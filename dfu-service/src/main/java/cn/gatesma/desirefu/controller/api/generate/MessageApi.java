/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.gatesma.desirefu.controller.api.generate;

import cn.gatesma.desirefu.domain.api.generate.SelectMessageRequest;
import cn.gatesma.desirefu.domain.api.generate.SelectMessageRet;
import cn.gatesma.desirefu.domain.api.generate.UpdateMessageStatusRequest;
import cn.gatesma.desirefu.domain.api.generate.UpdateMessageStatusRet;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@Api(value = "Message", tags={ "消息", }, description = "the Message API")
public interface MessageApi {

    @ApiOperation(value = "获取信息", nickname = "selectMessage", notes = "获取信息", response = SelectMessageRet.class, tags={ "消息", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = SelectMessageRet.class),
        @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
        @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/message/select",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SelectMessageRet> selectMessage(@ApiParam(value = "" ,required=true )  @Valid @RequestBody SelectMessageRequest body);

    @ApiOperation(value = "更新状态", nickname = "updateMessageStatus", notes = "更新状态", response = UpdateMessageStatusRet.class, tags={ "消息", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = UpdateMessageStatusRet.class),
            @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
            @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/message/update_status",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<UpdateMessageStatusRet> updateMessageStatus(@ApiParam(value = "" ,required=true )  @Valid @RequestBody UpdateMessageStatusRequest body);


}
