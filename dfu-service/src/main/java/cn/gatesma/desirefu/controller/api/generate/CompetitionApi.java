/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.gatesma.desirefu.controller.api.generate;

import cn.gatesma.desirefu.domain.api.generate.*;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@Api(value = "Competition", tags={ "比赛", }, description = "the Competition API")
public interface CompetitionApi {

    @ApiOperation(value = "创建比赛信息", nickname = "addCompetition", notes = "创建比赛信息", response = AddCompetitionRet.class, tags={ "比赛", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = AddCompetitionRet.class),
        @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
        @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/competition/add",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AddCompetitionRet> addCompetition(@ApiParam(value = "创建账号" ,required=true )  @Valid @RequestBody AddCompetitionRequest body);


    @ApiOperation(value = "获取比赛信息", nickname = "selectScrollCompetition", notes = "获取比赛信息", response = SelectCompetitionRet.class, tags={ "比赛", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = SelectCompetitionRet.class),
            @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
            @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/competition/select_scroll",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<SelectCompetitionRet> selectScrollCompetition(@ApiParam(value = "" ,required=true )  @Valid @RequestBody SelectCompetitionRequest body);

    @ApiOperation(value = "收藏比赛", nickname = "collectCompetition", notes = "收藏比赛", response = CollectCompetitionRet.class, tags={ "比赛", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = CollectCompetitionRet.class),
            @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
            @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/competition/collect",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<CollectCompetitionRet> collectCompetition(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CollectCompetitionRequest body);


    @ApiOperation(value = "获得收藏的比赛", nickname = "getCollectCompetition", notes = "获得收藏的比赛", response = GetCollectCompetitionRet.class, tags={ "比赛", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = GetCollectCompetitionRet.class),
            @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
            @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/competition/get_collect",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<GetCollectCompetitionRet> getCollectCompetition(@ApiParam(value = "" ,required=true )  @Valid @RequestBody GetCollectCompetitionRequest body);

    @ApiOperation(value = "查看是否收藏", nickname = "checkCollectCompetition", notes = "查看是否收藏", response = CheckCollectCompetitionRet.class, tags={ "比赛", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = CheckCollectCompetitionRet.class),
            @ApiResponse(code = 400, message = "Invalid RequestBody supplied"),
            @ApiResponse(code = 404, message = "RequestBody not found") })
    @RequestMapping(value = "/competition/check_collect",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<CheckCollectCompetitionRet> checkCollectCompetition(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CheckCollectCompetitionRequest body);

}
