/*
 * This file is generated by jOOQ.
*/
package cn.gatesma.desirefu.domain.db.generate.DFU_;


import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.Account_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.Accountuserrole_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.Openidqqidx_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.Openidwxidx_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.User_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.Userlogin_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Account_Record;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Accountuserrole_Record;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Openidqqidx_Record;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Openidwxidx_Record;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.User_Record;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Userlogin_Record;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>DFU_</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<Accountuserrole_Record, Long> IDENTITY_ACCOUNTUSERROLE_ = Identities0.IDENTITY_ACCOUNTUSERROLE_;
    public static final Identity<Account_Record, Long> IDENTITY_ACCOUNT_ = Identities0.IDENTITY_ACCOUNT_;
    public static final Identity<Userlogin_Record, Long> IDENTITY_USERLOGIN_ = Identities0.IDENTITY_USERLOGIN_;
    public static final Identity<User_Record, Long> IDENTITY_USER_ = Identities0.IDENTITY_USER_;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Accountuserrole_Record> KEY_ACCOUNTUSERROLE__PRIMARY = UniqueKeys0.KEY_ACCOUNTUSERROLE__PRIMARY;
    public static final UniqueKey<Account_Record> KEY_ACCOUNT__PRIMARY = UniqueKeys0.KEY_ACCOUNT__PRIMARY;
    public static final UniqueKey<Openidqqidx_Record> KEY_OPENIDQQIDX__PRIMARY = UniqueKeys0.KEY_OPENIDQQIDX__PRIMARY;
    public static final UniqueKey<Openidwxidx_Record> KEY_OPENIDWXIDX__PRIMARY = UniqueKeys0.KEY_OPENIDWXIDX__PRIMARY;
    public static final UniqueKey<Userlogin_Record> KEY_USERLOGIN__PRIMARY = UniqueKeys0.KEY_USERLOGIN__PRIMARY;
    public static final UniqueKey<User_Record> KEY_USER__PRIMARY = UniqueKeys0.KEY_USER__PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<Accountuserrole_Record, Long> IDENTITY_ACCOUNTUSERROLE_ = Internal.createIdentity(Accountuserrole_.ACCOUNTUSERROLE_, Accountuserrole_.ACCOUNTUSERROLE_.ACCOUNTROLEID);
        public static Identity<Account_Record, Long> IDENTITY_ACCOUNT_ = Internal.createIdentity(Account_.ACCOUNT_, Account_.ACCOUNT_.ACCOUNTID);
        public static Identity<Userlogin_Record, Long> IDENTITY_USERLOGIN_ = Internal.createIdentity(Userlogin_.USERLOGIN_, Userlogin_.USERLOGIN_.ID);
        public static Identity<User_Record, Long> IDENTITY_USER_ = Internal.createIdentity(User_.USER_, User_.USER_.USERID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<Accountuserrole_Record> KEY_ACCOUNTUSERROLE__PRIMARY = Internal.createUniqueKey(Accountuserrole_.ACCOUNTUSERROLE_, "KEY_AccountUserRole__PRIMARY", Accountuserrole_.ACCOUNTUSERROLE_.ACCOUNTROLEID);
        public static final UniqueKey<Account_Record> KEY_ACCOUNT__PRIMARY = Internal.createUniqueKey(Account_.ACCOUNT_, "KEY_Account__PRIMARY", Account_.ACCOUNT_.ACCOUNTID);
        public static final UniqueKey<Openidqqidx_Record> KEY_OPENIDQQIDX__PRIMARY = Internal.createUniqueKey(Openidqqidx_.OPENIDQQIDX_, "KEY_OpenIdQQIdx__PRIMARY", Openidqqidx_.OPENIDQQIDX_.OPENID);
        public static final UniqueKey<Openidwxidx_Record> KEY_OPENIDWXIDX__PRIMARY = Internal.createUniqueKey(Openidwxidx_.OPENIDWXIDX_, "KEY_OpenIdWXIdx__PRIMARY", Openidwxidx_.OPENIDWXIDX_.OPENID);
        public static final UniqueKey<Userlogin_Record> KEY_USERLOGIN__PRIMARY = Internal.createUniqueKey(Userlogin_.USERLOGIN_, "KEY_UserLogin__PRIMARY", Userlogin_.USERLOGIN_.ID);
        public static final UniqueKey<User_Record> KEY_USER__PRIMARY = Internal.createUniqueKey(User_.USER_, "KEY_User__PRIMARY", User_.USER_.USERID);
    }
}
