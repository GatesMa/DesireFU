/*
 * This file is generated by jOOQ.
*/
package cn.gatesma.desirefu.domain.db.generate.DFU_.tables;


import cn.gatesma.desirefu.domain.db.generate.DFU_.Dfu_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.Indexes;
import cn.gatesma.desirefu.domain.db.generate.DFU_.Keys;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.College_Record;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 高校信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class College_ extends TableImpl<College_Record> {

    private static final long serialVersionUID = -1179429384;

    /**
     * The reference instance of <code>DFU_.College_</code>
     */
    public static final College_ COLLEGE_ = new College_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<College_Record> getRecordType() {
        return College_Record.class;
    }

    /**
     * The column <code>DFU_.College_.collegeId</code>. 学校Id
     */
    public final TableField<College_Record, Integer> COLLEGEID = createField("collegeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "学校Id");

    /**
     * The column <code>DFU_.College_.name</code>. 学校名称
     */
    public final TableField<College_Record, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "学校名称");

    /**
     * The column <code>DFU_.College_.ministry</code>. 主管部门
     */
    public final TableField<College_Record, String> MINISTRY = createField("ministry", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "主管部门");

    /**
     * The column <code>DFU_.College_.identification</code>. 学校标识码
     */
    public final TableField<College_Record, String> IDENTIFICATION = createField("identification", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "学校标识码");

    /**
     * The column <code>DFU_.College_.location</code>. 所在地
     */
    public final TableField<College_Record, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "所在地");

    /**
     * The column <code>DFU_.College_.level</code>. 办学层次
     */
    public final TableField<College_Record, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "办学层次");

    /**
     * The column <code>DFU_.College_.memo</code>. 备注
     */
    public final TableField<College_Record, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "备注");

    /**
     * The column <code>DFU_.College_.createdTime</code>. 创建时间
     */
    public final TableField<College_Record, Timestamp> CREATEDTIME = createField("createdTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>DFU_.College_.deleteStatus</code>. 删除状态，0-正常，1-删除
     */
    public final TableField<College_Record, Integer> DELETESTATUS = createField("deleteStatus", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "删除状态，0-正常，1-删除");

    /**
     * The column <code>DFU_.College_.lastModifiedTime</code>. lastModifiedTime
     */
    public final TableField<College_Record, Timestamp> LASTMODIFIEDTIME = createField("lastModifiedTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "lastModifiedTime");

    /**
     * Create a <code>DFU_.College_</code> table reference
     */
    public College_() {
        this(DSL.name("College_"), null);
    }

    /**
     * Create an aliased <code>DFU_.College_</code> table reference
     */
    public College_(String alias) {
        this(DSL.name(alias), COLLEGE_);
    }

    /**
     * Create an aliased <code>DFU_.College_</code> table reference
     */
    public College_(Name alias) {
        this(alias, COLLEGE_);
    }

    private College_(Name alias, Table<College_Record> aliased) {
        this(alias, aliased, null);
    }

    private College_(Name alias, Table<College_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "高校信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dfu_.DFU_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COLLEGE__PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<College_Record, Integer> getIdentity() {
        return Keys.IDENTITY_COLLEGE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<College_Record> getPrimaryKey() {
        return Keys.KEY_COLLEGE__PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<College_Record>> getKeys() {
        return Arrays.<UniqueKey<College_Record>>asList(Keys.KEY_COLLEGE__PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public College_ as(String alias) {
        return new College_(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public College_ as(Name alias) {
        return new College_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public College_ rename(String name) {
        return new College_(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public College_ rename(Name name) {
        return new College_(name, null);
    }
}
