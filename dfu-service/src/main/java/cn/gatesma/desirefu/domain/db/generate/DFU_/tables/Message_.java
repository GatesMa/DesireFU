/*
 * This file is generated by jOOQ.
*/
package cn.gatesma.desirefu.domain.db.generate.DFU_.tables;


import cn.gatesma.desirefu.domain.db.generate.DFU_.Dfu_;
import cn.gatesma.desirefu.domain.db.generate.DFU_.Indexes;
import cn.gatesma.desirefu.domain.db.generate.DFU_.Keys;
import cn.gatesma.desirefu.domain.db.generate.DFU_.tables.records.Message_Record;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 消息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Message_ extends TableImpl<Message_Record> {

    private static final long serialVersionUID = -1321911898;

    /**
     * The reference instance of <code>DFU_.Message_</code>
     */
    public static final Message_ MESSAGE_ = new Message_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Message_Record> getRecordType() {
        return Message_Record.class;
    }

    /**
     * The column <code>DFU_.Message_.id</code>. Id
     */
    public final TableField<Message_Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "Id");

    /**
     * The column <code>DFU_.Message_.accountId</code>. AccountID
     */
    public final TableField<Message_Record, Long> ACCOUNTID = createField("accountId", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "AccountID");

    /**
     * The column <code>DFU_.Message_.type</code>. 类型
     */
    public final TableField<Message_Record, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "类型");

    /**
     * The column <code>DFU_.Message_.content</code>. 内容
     */
    public final TableField<Message_Record, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "内容");

    /**
     * The column <code>DFU_.Message_.status</code>. 状态 0:未读;1:已读;
     */
    public final TableField<Message_Record, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态 0:未读;1:已读;");

    /**
     * The column <code>DFU_.Message_.createdTime</code>. 创建时间
     */
    public final TableField<Message_Record, Timestamp> CREATEDTIME = createField("createdTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>DFU_.Message_.deleteStatus</code>. 删除状态，0-正常，1-删除
     */
    public final TableField<Message_Record, Integer> DELETESTATUS = createField("deleteStatus", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "删除状态，0-正常，1-删除");

    /**
     * The column <code>DFU_.Message_.lastModifiedTime</code>. lastModifiedTime
     */
    public final TableField<Message_Record, Timestamp> LASTMODIFIEDTIME = createField("lastModifiedTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "lastModifiedTime");

    /**
     * Create a <code>DFU_.Message_</code> table reference
     */
    public Message_() {
        this(DSL.name("Message_"), null);
    }

    /**
     * Create an aliased <code>DFU_.Message_</code> table reference
     */
    public Message_(String alias) {
        this(DSL.name(alias), MESSAGE_);
    }

    /**
     * Create an aliased <code>DFU_.Message_</code> table reference
     */
    public Message_(Name alias) {
        this(alias, MESSAGE_);
    }

    private Message_(Name alias, Table<Message_Record> aliased) {
        this(alias, aliased, null);
    }

    private Message_(Name alias, Table<Message_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "消息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dfu_.DFU_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESSAGE__PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Message_Record, Long> getIdentity() {
        return Keys.IDENTITY_MESSAGE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Message_Record> getPrimaryKey() {
        return Keys.KEY_MESSAGE__PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Message_Record>> getKeys() {
        return Arrays.<UniqueKey<Message_Record>>asList(Keys.KEY_MESSAGE__PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Message_ as(String alias) {
        return new Message_(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Message_ as(Name alias) {
        return new Message_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Message_ rename(String name) {
        return new Message_(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Message_ rename(Name name) {
        return new Message_(name, null);
    }
}
